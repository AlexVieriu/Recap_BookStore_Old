@page "/authors/view/{id:int}"

@inject IAuthorRepository _authRepo

@if (Author == null)
{
    <InfoComponent Message="Loading..." />
}
else
{
    <h4>Author View</h4>
    <br />

    <table class="table">
        <tbody>
            <tr>
                <td><strong>First Name</strong></td>
                <td>@Author.FirstName</td>
            </tr>
            <tr>
                <td><strong>Last Name</strong></td>
                <td>@Author.LastName</td>
            </tr>
            <tr>
                <td><strong>Biography</strong></td>
                <td>@Author.Bio</td>
            </tr>
        </tbody>
    </table>

    <br />

    @if (Author.Books == null || Author.Books.Count < 1)
    {
        <p class="text-secondary">
            The Author have no Books
        </p>
    }
    else
    {
        <div class="card">
            <div class="card-header">
                List of Books
            </div>
            <ul class="list-group list-group-flush">
                @foreach (var book in Author.Books)
                {
                    <li class="list-group-item">@($"{book.Title} - {book.Price} ")</li>
                }
            </ul>
        </div>
    }
    <br />

    <a href="/authors/edit/@Author.Id" class="btn btn-outline-warning m-2">
        <span class="oi oi-pencil"></span>
        Edit Author
    </a>

    <a href="/authors/delete/@Author.Id" class="btn btn-outline-danger m-2">
        <span class="oi oi-circle-x"></span>
        Delete Author
    </a>

    <a href="/authors" class="btn btn-secondary m-2">
        <span class="oi oi-media-skip-backward"></span> Back to List
    </a>
}


@code{
    [Parameter]
    public int Id { get; set; }

    private AuthorModel Author = new();

    protected override async Task OnInitializedAsync()
    {
        Author = await _authRepo.GetbyId(Endpoints.AuthorUrl, Id);
    }
}