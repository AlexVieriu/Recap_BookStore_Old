@page "/authors/update/{Id:int}"

@attribute [Authorize(Roles = "Administrator")]

@inject IAuthorRepository _authRepo
@inject NavigationManager _navManager
@inject IToastService _toastService

<h3>Update Author</h3>
<br />

@if (isSuccess != true)
{
    <ErrorComponent Message="The Author could not be saved" />
    <br />
    <a href="/authors" class="btn btn-outline-secondary">
        <span class="oi oi-media-step-backward"></span> Back To List
    </a>
}

@if (Id < 1)
{
    <ErrorComponent Message="Id is not good" />
}

else if (authorModel is null)
{
    <InfoComponent Message="Loding..." />
}

else
{

    <div class="card-body">
        <EditForm Model="authorModel" OnValidSubmit="UpdateSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>First Name</label>
                <InputText class="form-control" @bind-Value="authorModel.FirstName" />
            </div>

            <div class="form-group">
                <label>Last Name</label>
                <InputText class="form-control" @bind-Value="authorModel.LastName" />
            </div>

            <div class="form-group">
                <label>Biography</label>
                <InputTextArea class="form-control" @bind-Value="authorModel.Bio" />
            </div>
            <br />
            <div class="row">
                <button type="submit" class="btn btn-outline-primary col-3 m-2">
                    Update Author
                </button>

                <a href="/authors" class="btn btn-outline-secondary col-3 m-2">
                    <span class="oi oi-media-skip-backward"></span> Back To List
                </a>
            </div>
        </EditForm>
    </div>
}

@code{
    [Parameter]
    public int Id { get; set; }

    public Author authorModel = new();
    public bool isSuccess = true;


    protected override async Task OnInitializedAsync()
    {
        authorModel = await _authRepo.GetbyId(Endpoints.AuthorUrl, Id);
    }

    private async Task UpdateSubmit()
    {
        isSuccess = await _authRepo.Update(Endpoints.AuthorUrl, authorModel, authorModel.Id);

        if (isSuccess)
        {
            _toastService.ShowSuccess("Author Updated Succeesfully");
            _navManager.NavigateTo("/authors");
        }
        else
            _toastService.ShowError("Author wasn't updated");
    }

}
