@page "/books/view/{id:int}"

@inject IBookRepository _bookRepo
@inject IToastService _toastService

<h4>View Book Details</h4>
<br />
<br />

@if (Id < 1)
{
    <ErrorComponent Message="The id is not valid" />
    <a href="/books" class="btn btn-secondary">
        Back To List
    </a>
}
else if (Book == null)
{
    <InfoComponent Message="Loading..." />
}
else
{
    <div class="row">
        <div class="col-6">
            <table class="table table-responsive">
                <tr>
                    <td><strong>Title</strong></td>
                    <td>@Book.Title</td>
                </tr>
                <tr>
                    <td><strong>Author</strong></td>
                    <td>
                        @if (Book.Author == null)
                        {
                            <span class="text-muted">No Author Recorded</span>
                        }
                        else
                        {
                            <a href="/authors/view/@Book.AuthorId">
                                @Book.Author.FirstName @Book.Author.LastName
                            </a>
                        }
                    </td>
                </tr>
                <tr>
                    <td><strong>Summary</strong></td>
                    <td>@Book.Summary</td>
                </tr>
                <tr>
                    <td><strong>Published Year</strong></td>
                    <td>@Book.Year</td>
                </tr>
                <tr>
                    <td><strong>ISBN</strong></td>
                    <td>@Book.Isbn</td>
                </tr>
            </table>
        </div>

        @if (!string.IsNullOrWhiteSpace(Book.Image))
        {
            <div class="col-4">
                <img src="images/@Book.Image" />
                <h4 class="text-center text-info">@string.Format("{0:C}", Book.Price)</h4>
            </div>
        }

    </div>
}
<div class="row">
    <a href="/books" class="btn btn-outline-secondary col-3 m-2">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </a>

    <a href="books/edit/@Book.Id" class="btn btn-outline-warning col-3 m-2">
        <span class="oi oi-pencil"></span>
        Edit Book
    </a>

    <a href="books/delete/@Book.Id" class="btn btn-outline-danger col-3 m-2">
        <span class="oi oi-circle-x"></span>
        Delete Book
    </a>
</div>


@code{
    [Parameter]
    public int Id { get; set; }

    private Book Book = new();

    protected override async Task OnInitializedAsync()
    {
        Book = await _bookRepo.GetbyId(Endpoints.BookUrl, Id);
    }
}