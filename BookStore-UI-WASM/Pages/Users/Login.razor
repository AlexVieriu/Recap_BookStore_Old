@page "/login"

@inject IAuthentificationRepository _authRepo
@inject NavigationManager _navManager



<div class="card-title p-4 h4">
    Login User
</div>
@if (!result)
{
    <ErrorComponent  Message="Login Failed"/>
}

<div class="card-body">
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label>User Name</label>
            <InputText @bind-Value="loginModel.UserName" class="form-control" />
            <ValidationMessage For="@(() => loginModel.UserName)" />
        </div>

        <div class="form-group">
            <label>Password</label>
            <InputText @bind-Value="loginModel.Password" class="form-control" type="password" />
            <ValidationMessage For="@(() => loginModel.Password)" />
        </div>

        <button class="btn btn-primary" type="submit">Login</button>
    </EditForm>
</div>



@code{
    private LoginModel loginModel = new();
    private bool result = true;

    private async Task HandleLogin()
    {
        result = await _authRepo.Login(loginModel);
        if (result)
            _navManager.NavigateTo("/");

    }
}