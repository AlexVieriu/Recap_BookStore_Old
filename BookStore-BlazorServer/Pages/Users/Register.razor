@page "/Register"

@inject IAuthentificationRepository _authRepo
@inject NavigationManager   _navManager


<div class="card">
    <div class="card-title">
        <p>User Registration</p>
    </div>

    @if (registrationFailed == true)
    {
        <div class="text-danger">
            <p>Registration Failed</p>
        </div>
    }

    <div class="card">
        <div class="card-body">

            <EditForm Model="registerModel" OnInvalidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="username">User Name</label>
                    <InputText Id="username" class="form-control" @bind-Value="registerModel.UserName" />
                    <ValidationMessage For="@(() => registerModel.UserName)" />
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
                    <ValidationMessage For="@(() => registerModel.Password)" />
                </div>

                <div class="form-group">
                    <label for="passwordconfirmed">Confirmed Password</label>
                    <InputText Id="passwordconfirmed" type="password" class="form-control" @bind-Value="registerModel.ConfirmedPassword" />
                    <ValidationMessage For="@(() => registerModel.ConfirmedPassword)" />
                </div>

                <div>
                    <button type="submit" class="btn btn-primary">Register User</button>
                </div>

            </EditForm>

        </div>
    </div>
</div>



@code{
    RegisterModel registerModel = new();
    bool registrationFailed = false;

    private async void HandleRegistration()
    {
        var result = await _authRepo.Create(Endpoints.RegisterUrl, registerModel);
        if (result)
        {
            _navManager.NavigateTo("/");
        }
        else
        {
            registrationFailed = true;
        }
    }
}